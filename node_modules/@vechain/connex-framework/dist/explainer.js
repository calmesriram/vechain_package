"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const revert_reason_1 = require("./revert-reason");
const R = require("./rules");
const V = require("validator-ts");
function newExplainer(ctx) {
    const opts = {};
    return {
        caller(addr) {
            opts.caller = R.test(addr, R.address, 'arg0').toLowerCase();
            return this;
        },
        gas(gas) {
            opts.gas = R.test(gas, R.uint64, 'arg0');
            return this;
        },
        gasPrice(gp) {
            opts.gasPrice = R.test(gp, R.bigInt, 'arg0').toString().toLowerCase();
            return this;
        },
        execute(clauses) {
            R.test(clauses, [clauseScheme], 'arg0');
            const transformedClauses = clauses.map(c => {
                return {
                    to: c.to ? c.to.toLowerCase() : null,
                    value: c.value.toString().toLowerCase(),
                    data: (c.data || '0x').toLowerCase()
                };
            });
            return ctx.driver.explain(Object.assign({ clauses: transformedClauses }, opts), ctx.trackedHead.id)
                .then(outputs => {
                return outputs.map(o => {
                    if (o.reverted) {
                        const revertReason = revert_reason_1.decodeRevertReason(o.data);
                        return Object.assign(Object.assign({}, o), { decoded: { revertReason } });
                    }
                    return o;
                });
            });
        }
    };
}
exports.newExplainer = newExplainer;
const clauseScheme = {
    to: V.nullable(R.address),
    value: R.bigInt,
    data: V.optional(R.bytes)
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwbGFpbmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2V4cGxhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFvRDtBQUNwRCw2QkFBNEI7QUFDNUIsa0NBQWlDO0FBRWpDLFNBQWdCLFlBQVksQ0FBQyxHQUFZO0lBQ3JDLE1BQU0sSUFBSSxHQUlOLEVBQUUsQ0FBQTtJQUVOLE9BQU87UUFDSCxNQUFNLENBQUMsSUFBSTtZQUNQLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtZQUMzRCxPQUFPLElBQUksQ0FBQTtRQUNmLENBQUM7UUFDRCxHQUFHLENBQUMsR0FBRztZQUNILElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQTtZQUN4QyxPQUFPLElBQUksQ0FBQTtRQUNmLENBQUM7UUFDRCxRQUFRLENBQUMsRUFBRTtZQUNQLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtZQUNyRSxPQUFPLElBQUksQ0FBQTtRQUNmLENBQUM7UUFDRCxPQUFPLENBQUMsT0FBTztZQUNYLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUE7WUFFdkMsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUN2QyxPQUFPO29CQUNILEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJO29CQUNwQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUU7b0JBQ3ZDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFO2lCQUN2QyxDQUFBO1lBQ0wsQ0FBQyxDQUFDLENBQUE7WUFFRixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxpQkFFakIsT0FBTyxFQUFFLGtCQUFrQixJQUN4QixJQUFJLEdBRVgsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUM7aUJBQ2xCLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDWixPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7b0JBQ25CLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRTt3QkFDWixNQUFNLFlBQVksR0FBRyxrQ0FBa0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7d0JBQy9DLHVDQUFZLENBQUMsS0FBRSxPQUFPLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBRTtxQkFDN0M7b0JBQ0QsT0FBTyxDQUFDLENBQUE7Z0JBQ1osQ0FBQyxDQUFDLENBQUE7WUFDTixDQUFDLENBQUMsQ0FBQTtRQUNWLENBQUM7S0FDSixDQUFBO0FBQ0wsQ0FBQztBQWhERCxvQ0FnREM7QUFFRCxNQUFNLFlBQVksR0FBaUM7SUFDL0MsRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUN6QixLQUFLLEVBQUUsQ0FBQyxDQUFDLE1BQU07SUFDZixJQUFJLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0NBQzVCLENBQUEifQ==