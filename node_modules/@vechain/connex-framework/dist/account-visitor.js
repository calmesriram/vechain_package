"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const event_visitor_1 = require("./event-visitor");
const method_1 = require("./method");
const abi_1 = require("thor-devkit/dist/abi");
const R = require("./rules");
function newAccountVisitor(ctx, addr) {
    return {
        get address() { return addr; },
        get: () => {
            return ctx.driver.getAccount(addr, ctx.trackedHead.id);
        },
        getCode: () => {
            return ctx.driver.getCode(addr, ctx.trackedHead.id);
        },
        getStorage: key => {
            key = R.test(key, R.bytes32, 'arg0').toLowerCase();
            return ctx.driver.getStorage(addr, key, ctx.trackedHead.id);
        },
        method: jsonABI => {
            let coder;
            try {
                coder = new abi_1.abi.Function(JSON.parse(JSON.stringify(jsonABI)));
            }
            catch (err) {
                throw new R.BadParameter(`arg0: expected valid ABI (${err.message})`);
            }
            return method_1.newMethod(ctx, addr, coder);
        },
        event: jsonABI => {
            let coder;
            try {
                coder = new abi_1.abi.Event(JSON.parse(JSON.stringify(jsonABI)));
            }
            catch (err) {
                throw new R.BadParameter(`arg0: expected valid ABI (${err.message})`);
            }
            return event_visitor_1.newEventVisitor(ctx, addr, coder);
        }
    };
}
exports.newAccountVisitor = newAccountVisitor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC12aXNpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FjY291bnQtdmlzaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUFpRDtBQUNqRCxxQ0FBb0M7QUFDcEMsOENBQTBDO0FBQzFDLDZCQUE0QjtBQUU1QixTQUFnQixpQkFBaUIsQ0FDN0IsR0FBWSxFQUNaLElBQVk7SUFFWixPQUFPO1FBQ0gsSUFBSSxPQUFPLEtBQUssT0FBTyxJQUFJLENBQUEsQ0FBQyxDQUFDO1FBQzdCLEdBQUcsRUFBRSxHQUFHLEVBQUU7WUFDTixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQzFELENBQUM7UUFDRCxPQUFPLEVBQUUsR0FBRyxFQUFFO1lBQ1YsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN2RCxDQUFDO1FBQ0QsVUFBVSxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ2QsR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDbEQsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDL0QsQ0FBQztRQUNELE1BQU0sRUFBRSxPQUFPLENBQUMsRUFBRTtZQUNkLElBQUksS0FBSyxDQUFBO1lBQ1QsSUFBSTtnQkFDQSxLQUFLLEdBQUcsSUFBSSxTQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7YUFDaEU7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDVixNQUFNLElBQUksQ0FBQyxDQUFDLFlBQVksQ0FBQyw2QkFBNkIsR0FBRyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUE7YUFDeEU7WUFDRCxPQUFPLGtCQUFTLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQTtRQUN0QyxDQUFDO1FBQ0QsS0FBSyxFQUFFLE9BQU8sQ0FBQyxFQUFFO1lBQ2IsSUFBSSxLQUFLLENBQUE7WUFDVCxJQUFJO2dCQUNBLEtBQUssR0FBRyxJQUFJLFNBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTthQUM3RDtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNWLE1BQU0sSUFBSSxDQUFDLENBQUMsWUFBWSxDQUFDLDZCQUE2QixHQUFHLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQTthQUN4RTtZQUNELE9BQU8sK0JBQWUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBQzVDLENBQUM7S0FDSixDQUFBO0FBQ0wsQ0FBQztBQW5DRCw4Q0FtQ0MifQ==