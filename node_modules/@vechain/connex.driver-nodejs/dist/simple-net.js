"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
const simple_websocket_reader_1 = require("./simple-websocket-reader");
const url_1 = require("url");
const http_1 = require("http");
const https_1 = require("https");
/** class simply implements Net interface */
class SimpleNet {
    constructor(baseURL, timeout = 15 * 1000, wsTimeout = 30 * 1000) {
        this.baseURL = baseURL;
        this.wsTimeout = wsTimeout;
        this.axios = axios_1.default.create({
            httpAgent: new http_1.Agent({ keepAlive: true }),
            httpsAgent: new https_1.Agent({ keepAlive: true }),
            baseURL,
            timeout
        });
    }
    http(method, path, params) {
        return __awaiter(this, void 0, void 0, function* () {
            params = params || {};
            try {
                const resp = yield this.axios.request({
                    method,
                    url: path,
                    data: params.body ? JSON.stringify(params.body) : undefined,
                    headers: params.headers,
                    params: params.query
                });
                if (params.validateResponseHeader) {
                    params.validateResponseHeader(resp.headers);
                }
                return resp.data;
            }
            catch (err) {
                if (err.isAxiosError) {
                    throw convertError(err);
                }
                throw new Error(`${method} ${url_1.resolve(this.baseURL, path)}: ${err.message}`);
            }
        });
    }
    openWebSocketReader(path) {
        const url = url_1.resolve(this.baseURL, path)
            .replace(/^http:/i, 'ws:')
            .replace(/^https:/i, 'wss:');
        return new simple_websocket_reader_1.SimpleWebSocketReader(url, this.wsTimeout);
    }
}
exports.SimpleNet = SimpleNet;
function convertError(err) {
    if (err.response) {
        const resp = err.response;
        if (typeof resp.data === 'string') {
            let text = resp.data.trim();
            if (text.length > 50) {
                text = text.slice(0, 50) + '...';
            }
            return new Error(`${resp.status} ${err.config.method} ${err.config.url}: ${text}`);
        }
        else {
            return new Error(`${resp.status} ${err.config.method} ${err.config.url}`);
        }
    }
    else {
        return new Error(`${err.config.method} ${err.config.url}: ${err.message}`);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLW5ldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9zaW1wbGUtbmV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxpQ0FBd0Q7QUFDeEQsdUVBQWlFO0FBQ2pFLDZCQUE2QjtBQUM3QiwrQkFBeUM7QUFDekMsaUNBQTJDO0FBRTNDLDRDQUE0QztBQUM1QyxNQUFhLFNBQVM7SUFHbEIsWUFDYSxPQUFlLEVBQ3hCLE9BQU8sR0FBRyxFQUFFLEdBQUcsSUFBSSxFQUNGLFlBQVksRUFBRSxHQUFHLElBQUk7UUFGN0IsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUVQLGNBQVMsR0FBVCxTQUFTLENBQVk7UUFFdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxlQUFLLENBQUMsTUFBTSxDQUFDO1lBQ3RCLFNBQVMsRUFBRSxJQUFJLFlBQVMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQztZQUM3QyxVQUFVLEVBQUUsSUFBSSxhQUFVLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUM7WUFDL0MsT0FBTztZQUNQLE9BQU87U0FDVixDQUFDLENBQUE7SUFDTixDQUFDO0lBRVksSUFBSSxDQUNiLE1BQXNCLEVBQ3RCLElBQVksRUFDWixNQUFtQjs7WUFDbkIsTUFBTSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUE7WUFDckIsSUFBSTtnQkFDQSxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO29CQUNsQyxNQUFNO29CQUNOLEdBQUcsRUFBRSxJQUFJO29CQUNULElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztvQkFDM0QsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPO29CQUN2QixNQUFNLEVBQUUsTUFBTSxDQUFDLEtBQUs7aUJBQ3ZCLENBQUMsQ0FBQTtnQkFDRixJQUFJLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRTtvQkFDL0IsTUFBTSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtpQkFDOUM7Z0JBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFBO2FBQ25CO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1YsSUFBSSxHQUFHLENBQUMsWUFBWSxFQUFFO29CQUNsQixNQUFNLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQTtpQkFDMUI7Z0JBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLE1BQU0sSUFBSSxhQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQTthQUM5RTtRQUNMLENBQUM7S0FBQTtJQUNNLG1CQUFtQixDQUFDLElBQVk7UUFDbkMsTUFBTSxHQUFHLEdBQUcsYUFBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDO2FBQ2xDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO2FBQ3pCLE9BQU8sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDaEMsT0FBTyxJQUFJLCtDQUFxQixDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDekQsQ0FBQztDQUNKO0FBOUNELDhCQThDQztBQUVELFNBQVMsWUFBWSxDQUFDLEdBQWU7SUFDakMsSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFO1FBQ2QsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQTtRQUN6QixJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUMzQixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUFFO2dCQUNsQixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFBO2FBQ25DO1lBQ0QsT0FBTyxJQUFJLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQTtTQUNyRjthQUFNO1lBQ0gsT0FBTyxJQUFJLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFBO1NBQzVFO0tBQ0o7U0FBTTtRQUNILE9BQU8sSUFBSSxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQTtLQUM3RTtBQUNMLENBQUMifQ==